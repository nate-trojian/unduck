name: Get new bangs
on:
    workflow_dispatch:
        inputs:
            force_generate:
                description: 'Force generate new bangs file'
                required: false
                default: false
                type: boolean
            skip_download:
                description: 'Skip downloading new bangs'
                required: false
                default: false
                type: boolean
    schedule: 
        - cron: "0 0 * * *"
jobs:
    Download-ddg-bangs:
        runs-on: ubuntu-latest
        if: !inputs.skip_download
        outputs:
            new-bangs: ${{ steps.new-bangs.outcome }}
        steps:
            - name: Fetch latest bangs
              run: curl https://duckduckgo.com/bang.js -O
            - name: Get last bangs version from cache
              id: get-cached-bangs
              uses: actions/cache@v4
              with:
                key: latest-ddg-bangs.json
                path: latest-ddg-bangs.json
            - name: Compare versions
              if: steps.get-cached-bangs.outputs.cache-hit == 'true'
              id: compare-bangs
              run: diff -sq latest-ddg-bangs.json bang.js > /dev/null
              continue-on-error: true
            - name: Upload new bangs
              if: steps.compare-bangs.outcome == 'failure' || steps.get-cached-bangs.outputs.cache-hit != 'true'
              id: new-bangs
              run: 'mv -f bang.js latest-ddg-bangs.json'
    Generate-new-bangs-file:
        runs-on: ubuntu-latest
        needs: Download-ddg-bangs
        if: inputs.force_generate || needs.Download-ddg-bangs.outputs.new-bangs == 'success'
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Get last bangs version from cache
              id: get-cached-bangs
              uses: actions/cache@v4
              with:
                key: latest-ddg-bangs.json
                path: latest-ddg-bangs.json
            - name: Load custom action
              id: get-merge-bangs-action
              uses: actions/cache@v4
              with:
                key: merge-bangs-action
                path: .github/actions/merge-bangs/dist
            - name: Install action
              if: steps.get-merge-bangs-action.outputs.cache-hit != 'true'
              run: 'cd .github/actions/merge-bangs && npm install && npm run package && cd -'
            - name: Generate new bangs file
              uses: ./.github/actions/merge-bangs